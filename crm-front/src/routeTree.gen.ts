/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as CrmIndexImport } from './routes/crm/index'
import { Route as CrmNewclientIndexImport } from './routes/crm/new_client/index'
import { Route as CrmUpdateclientClientIdImport } from './routes/crm/update_client/$clientId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CrmIndexRoute = CrmIndexImport.update({
  id: '/crm/',
  path: '/crm/',
  getParentRoute: () => rootRoute,
} as any)

const CrmNewclientIndexRoute = CrmNewclientIndexImport.update({
  id: '/crm/new_client/',
  path: '/crm/new_client/',
  getParentRoute: () => rootRoute,
} as any)

const CrmUpdateclientClientIdRoute = CrmUpdateclientClientIdImport.update({
  id: '/crm/update_client/$clientId',
  path: '/crm/update_client/$clientId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/crm/': {
      id: '/crm/'
      path: '/crm'
      fullPath: '/crm'
      preLoaderRoute: typeof CrmIndexImport
      parentRoute: typeof rootRoute
    }
    '/crm/update_client/$clientId': {
      id: '/crm/update_client/$clientId'
      path: '/crm/update_client/$clientId'
      fullPath: '/crm/update_client/$clientId'
      preLoaderRoute: typeof CrmUpdateclientClientIdImport
      parentRoute: typeof rootRoute
    }
    '/crm/new_client/': {
      id: '/crm/new_client/'
      path: '/crm/new_client'
      fullPath: '/crm/new_client'
      preLoaderRoute: typeof CrmNewclientIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/crm': typeof CrmIndexRoute
  '/crm/update_client/$clientId': typeof CrmUpdateclientClientIdRoute
  '/crm/new_client': typeof CrmNewclientIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/crm': typeof CrmIndexRoute
  '/crm/update_client/$clientId': typeof CrmUpdateclientClientIdRoute
  '/crm/new_client': typeof CrmNewclientIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/crm/': typeof CrmIndexRoute
  '/crm/update_client/$clientId': typeof CrmUpdateclientClientIdRoute
  '/crm/new_client/': typeof CrmNewclientIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/crm' | '/crm/update_client/$clientId' | '/crm/new_client'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/crm' | '/crm/update_client/$clientId' | '/crm/new_client'
  id:
    | '__root__'
    | '/'
    | '/crm/'
    | '/crm/update_client/$clientId'
    | '/crm/new_client/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CrmIndexRoute: typeof CrmIndexRoute
  CrmUpdateclientClientIdRoute: typeof CrmUpdateclientClientIdRoute
  CrmNewclientIndexRoute: typeof CrmNewclientIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CrmIndexRoute: CrmIndexRoute,
  CrmUpdateclientClientIdRoute: CrmUpdateclientClientIdRoute,
  CrmNewclientIndexRoute: CrmNewclientIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/crm/",
        "/crm/update_client/$clientId",
        "/crm/new_client/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/crm/": {
      "filePath": "crm/index.tsx"
    },
    "/crm/update_client/$clientId": {
      "filePath": "crm/update_client/$clientId.tsx"
    },
    "/crm/new_client/": {
      "filePath": "crm/new_client/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
